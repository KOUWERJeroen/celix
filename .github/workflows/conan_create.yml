name: Conan Create

on:
  push:
  pull_request:
  schedule:
    - cron:  '0 0 * * *'

jobs:

  ubuntu-build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        compiler: [ [gcc,g++], [clang,clang++] ]
        type: [ Debug ]
    timeout-minutes: 120
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3.3.0
      - name: Install conan
        run: |
          sudo pip install -U conan==1.59.0
      - name: Setup Conan Profile
        env:
          CC: ${{ matrix.compiler[0] }}
          CXX: ${{ matrix.compiler[1] }}
        run: |
          # build profile
          conan profile new release --detect
          conan profile update settings.build_type=Release release
          #Note no backwards compatiblity for gcc5 needed, setting libcxx to c++11.
          conan profile update settings.compiler.libcxx=libstdc++11 release
          conan profile show release
          # host profile
          conan profile new default --detect
          conan profile update settings.build_type=${{ matrix.type }} default
          #Note no backwards compatiblity for gcc5 needed, setting libcxx to c++11.
          conan profile update settings.compiler.libcxx=libstdc++11 default
          conan profile show default
      - name: Create Celix
        env:
          CC: ${{ matrix.compiler[0] }}
          CXX: ${{ matrix.compiler[1] }}
        run: |
          conan inspect . -a options | awk 'BEGIN { FS="[\t:]+" } /build/ && !/build_all/ { print $1}' | while read option; do conan create . -b missing -o celix:${option}=True  -pr:b release -pr:h default -tf examples/conan_test_package -tbf test-build -o celix:celix_cxx17=True -o celix:celix_install_deprecated_api=True --require-override=libcurl/7.64.1 --require-override=openssl/1.1.1s || exit 1; done

  macOS-build:
    runs-on: macOS-11
    timeout-minutes: 120
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3.3.0
      - name: Install conan
        run: |
          brew install python
          pip3 install -U conan==1.59.0
      - name: Setup Conan Profile
        run: |
          conan profile new default --detect
          conan profile update settings.build_type=Release default
      - name: Create Celix
        run: |
          conan inspect . -a options | awk 'BEGIN { FS="[\t:]+" } /build/ && !/build_all/ { print $1}' | while read option; do conan create . -b missing -o celix:${option}=True  -pr:b release -pr:h default -tf examples/conan_test_package -tbf test-build -o celix:celix_cxx17=True -o celix:celix_install_deprecated_api=True --require-override=libcurl/7.64.1 --require-override=openssl/1.1.1s || exit 1; done
